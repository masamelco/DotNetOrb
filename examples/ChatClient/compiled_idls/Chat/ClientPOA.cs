/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 26/02/2024 12:18:44
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace Chat
{

	public abstract class ClientPOA: PortableServer.Servant, CORBA.IInvokeHandler, IClientOperations
	{
		static private Dictionary<string,int> _opsDict = new Dictionary<string,int>();
		static ClientPOA()
		{
			_opsDict.Add("_get_Name", 0);
			_opsDict.Add("SendMessage", 1);
		}
		private string[] _ids = {"IDL:Chat/Client:1.0"};

		[IdlName("Name")]
		[WideChar(false)]
		public abstract string Name 
		{
			get;
		}
		[IdlName("SendMessage")]
		public abstract void SendMessage(Chat.Message msg);

		public override string[] _AllInterfaces(PortableServer.IPOA poa, byte[] objId)
		{
			return _ids;
		}

		public virtual Chat.IClient _This()
		{
			return Chat.ClientHelper.Narrow(_ThisObject());
		}

		public virtual Chat.IClient _This(CORBA.ORB orb)
		{
			return Chat.ClientHelper.Narrow(_ThisObject(orb));
		}

		public CORBA.IOutputStream _Invoke(string method, CORBA.IInputStream inputStream, CORBA.IResponseHandler handler)
		{
			CORBA.IOutputStream outputStream = null;
			int opIndex;
			if (_opsDict.TryGetValue(method, out opIndex))
			{
				switch (opIndex)
				{
					case 0:
					{
							outputStream = handler.CreateReply();
							outputStream.WriteString(Name);
					}
					break;
					case 1:
					{
							Chat.Message msg;
							msg = Chat.MessageHelper.Read(inputStream);
							outputStream = handler.CreateReply();
							SendMessage(msg);
					}
					break;
				}
				return outputStream;
			}
			else
			{
				throw new CORBA.BadOperation(method + " not found");
			}
		}
	}
}
