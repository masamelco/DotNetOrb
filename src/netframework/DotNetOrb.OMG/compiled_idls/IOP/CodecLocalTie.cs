/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace IOP
{

	public class CodecLocalTie: _CodecLocalBase
	{
		public ICodecOperations _OperationsDelegate { get; set; }

		public CodecLocalTie(ICodecOperations d)
		{
			_OperationsDelegate = d;
		}

		[IdlName("encode")]
		[ThrowsIdlException(typeof(IOP.Codec.InvalidTypeForEncoding))]
		public override byte[] Encode(CORBA.Any data)
		{
			return _OperationsDelegate.Encode(data);
		}
		[IdlName("decode")]
		[ThrowsIdlException(typeof(IOP.Codec.FormatMismatch))]
		public override CORBA.Any Decode(byte[] data)
		{
			return _OperationsDelegate.Decode(data);
		}
		[IdlName("encode_value")]
		[ThrowsIdlException(typeof(IOP.Codec.InvalidTypeForEncoding))]
		public override byte[] EncodeValue(CORBA.Any data)
		{
			return _OperationsDelegate.EncodeValue(data);
		}
		[IdlName("decode_value")]
		[ThrowsIdlException(typeof(IOP.Codec.FormatMismatch))]
		[ThrowsIdlException(typeof(IOP.Codec.TypeMismatch))]
		public override CORBA.Any DecodeValue(byte[] data, CORBA.TypeCode tc)
		{
			return _OperationsDelegate.DecodeValue(data, tc);
		}
	}
}
