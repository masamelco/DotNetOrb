/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:30
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace CosNaming
{

	public class NamingContextExtPOATie: NamingContextExtPOA
	{
		public INamingContextExtOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public NamingContextExtPOATie(INamingContextExtOperations d)
		{
			_OperationsDelegate = d;
		}

		public NamingContextExtPOATie(INamingContextExtOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override CosNaming.INamingContextExt _This()
		{
			return CosNaming.NamingContextExtHelper.Narrow(_ThisObject());
		}

		public override CosNaming.INamingContextExt _This(CORBA.ORB orb)
		{
			return CosNaming.NamingContextExtHelper.Narrow(_ThisObject(orb));
		}

		[IdlName("bind")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.AlreadyBound))]
		public override void Bind(CosNaming.NameComponent[] n, CORBA.IObject obj)
		{
			_OperationsDelegate.Bind(n, obj);
		}
		[IdlName("rebind")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		public override void Rebind(CosNaming.NameComponent[] n, CORBA.IObject obj)
		{
			_OperationsDelegate.Rebind(n, obj);
		}
		[IdlName("bind_context")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.AlreadyBound))]
		public override void BindContext(CosNaming.NameComponent[] n, CosNaming.INamingContext nc)
		{
			_OperationsDelegate.BindContext(n, nc);
		}
		[IdlName("rebind_context")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		public override void RebindContext(CosNaming.NameComponent[] n, CosNaming.INamingContext nc)
		{
			_OperationsDelegate.RebindContext(n, nc);
		}
		[IdlName("resolve")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		public override CORBA.IObject Resolve(CosNaming.NameComponent[] n)
		{
			return _OperationsDelegate.Resolve(n);
		}
		[IdlName("unbind")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		public override void Unbind(CosNaming.NameComponent[] n)
		{
			_OperationsDelegate.Unbind(n);
		}
		[IdlName("new_context")]
		public override CosNaming.INamingContext NewContext()
		{
			return _OperationsDelegate.NewContext();
		}
		[IdlName("bind_new_context")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.AlreadyBound))]
		public override CosNaming.INamingContext BindNewContext(CosNaming.NameComponent[] n)
		{
			return _OperationsDelegate.BindNewContext(n);
		}
		[IdlName("destroy")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotEmpty))]
		public override void Destroy()
		{
			_OperationsDelegate.Destroy();
		}
		[IdlName("list")]
		public override void List(uint howMany, out CosNaming.Binding[] bl, out CosNaming.IBindingIterator bi)
		{
			_OperationsDelegate.List(howMany, out bl, out bi);
		}
		[IdlName("to_string")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		[return: WideChar(false)]
		public override string ToString(CosNaming.NameComponent[] n)
		{
			return _OperationsDelegate.ToString(n);
		}
		[IdlName("to_name")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		public override CosNaming.NameComponent[] ToName([WideChar(false)] string sn)
		{
			return _OperationsDelegate.ToName(sn);
		}
		[IdlName("to_url")]
		[ThrowsIdlException(typeof(CosNaming.NamingContextExt.InvalidAddress))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		[return: WideChar(false)]
		public override string ToUrl([WideChar(false)] string addr, [WideChar(false)] string sn)
		{
			return _OperationsDelegate.ToUrl(addr, sn);
		}
		[IdlName("resolve_str")]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.NotFound))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.CannotProceed))]
		[ThrowsIdlException(typeof(CosNaming.NamingContext.InvalidName))]
		public override CORBA.IObject ResolveStr([WideChar(false)] string n)
		{
			return _OperationsDelegate.ResolveStr(n);
		}
	}
}
