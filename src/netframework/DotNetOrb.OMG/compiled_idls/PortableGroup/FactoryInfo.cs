/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:30
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace PortableGroup
{
	[RepositoryID("IDL:omg.org/PortableGroup/FactoryInfo:1.0")]
	[Helper(typeof(FactoryInfoHelper))]
	public partial class FactoryInfo: CORBA.IIDLEntity, IEquatable<PortableGroup.FactoryInfo>
	{
		[IdlName("FactoryInfo")]
		public PortableGroup.IGenericFactory TheFactory { get; set; }
		[IdlName("FactoryInfo")]
		public CosNaming.NameComponent[] TheLocation { get; set; }
		[IdlName("FactoryInfo")]
		public PortableGroup.Property[] TheCriteria { get; set; }

		public FactoryInfo()
		{
		}

		public FactoryInfo(FactoryInfo other)
		{
			TheFactory = other.TheFactory;
			TheLocation = other.TheLocation;
			TheCriteria = other.TheCriteria;
		}

		public FactoryInfo(PortableGroup.IGenericFactory theFactory, CosNaming.NameComponent[] theLocation, PortableGroup.Property[] theCriteria)
		{
			this.TheFactory = theFactory;
			this.TheLocation = theLocation;
			this.TheCriteria = theCriteria;
		}

		public bool Equals(PortableGroup.FactoryInfo? other)
		{
			if (other == null) return false;
			if (!TheFactory.Equals(other.TheFactory)) return false;
			if (!TheLocation.SequenceEqual(other.TheLocation)) return false;
			if (!TheCriteria.SequenceEqual(other.TheCriteria)) return false;
			return true;
		}
	}

}
