/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace Security
{
	[RepositoryID("IDL:omg.org/Security/SecAttribute:1.0")]
	[Helper(typeof(SecAttributeHelper))]
	public partial class SecAttribute: CORBA.IIDLEntity, IEquatable<Security.SecAttribute>
	{
		[IdlName("SecAttribute")]
		public Security.AttributeType AttributeType { get; set; }
		[IdlName("SecAttribute")]
		public byte[] DefiningAuthority { get; set; }
		[IdlName("SecAttribute")]
		public byte[] Value { get; set; }

		public SecAttribute()
		{
		}

		public SecAttribute(SecAttribute other)
		{
			AttributeType = other.AttributeType;
			DefiningAuthority = other.DefiningAuthority;
			Value = other.Value;
		}

		public SecAttribute(Security.AttributeType attributeType, byte[] definingAuthority, byte[] value)
		{
			this.AttributeType = attributeType;
			this.DefiningAuthority = definingAuthority;
			this.Value = value;
		}

		public bool Equals(Security.SecAttribute? other)
		{
			if (other == null) return false;
			if (!AttributeType.Equals(other.AttributeType)) return false;
			if (!DefiningAuthority.SequenceEqual(other.DefiningAuthority)) return false;
			if (!Value.SequenceEqual(other.Value)) return false;
			return true;
		}
	}

}
