/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace Security
{
	[RepositoryID("IDL:omg.org/Security/SecurityMechanismData:1.0")]
	[Helper(typeof(SecurityMechanismDataHelper))]
	public partial class SecurityMechanismData: CORBA.IIDLEntity, IEquatable<Security.SecurityMechanismData>
	{
		[IdlName("SecurityMechanismData")]
		[WideChar(false)]
		public string Mechanism { get; set; }
		[IdlName("SecurityMechanismData")]
		[WideChar(false)]
		public string SecurityName { get; set; }
		[IdlName("SecurityMechanismData")]
		public ushort OptionsSupported { get; set; }
		[IdlName("SecurityMechanismData")]
		public ushort OptionsRequired { get; set; }

		public SecurityMechanismData()
		{
		}

		public SecurityMechanismData(SecurityMechanismData other)
		{
			Mechanism = other.Mechanism;
			SecurityName = other.SecurityName;
			OptionsSupported = other.OptionsSupported;
			OptionsRequired = other.OptionsRequired;
		}

		public SecurityMechanismData(string mechanism, string securityName, ushort optionsSupported, ushort optionsRequired)
		{
			this.Mechanism = mechanism;
			this.SecurityName = securityName;
			this.OptionsSupported = optionsSupported;
			this.OptionsRequired = optionsRequired;
		}

		public bool Equals(Security.SecurityMechanismData? other)
		{
			if (other == null) return false;
			if (!Mechanism.Equals(other.Mechanism)) return false;
			if (!SecurityName.Equals(other.SecurityName)) return false;
			if (!OptionsSupported.Equals(other.OptionsSupported)) return false;
			if (!OptionsRequired.Equals(other.OptionsRequired)) return false;
			return true;
		}
	}

}
