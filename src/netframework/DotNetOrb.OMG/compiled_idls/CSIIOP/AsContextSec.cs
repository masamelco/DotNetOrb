/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace CSIIOP
{
	[RepositoryID("IDL:CSIIOP/AS_ContextSec:1.0")]
	[Helper(typeof(AsContextSecHelper))]
	public partial class AsContextSec: CORBA.IIDLEntity, IEquatable<CSIIOP.AsContextSec>
	{
		[IdlName("AS_ContextSec")]
		public ushort TargetSupports { get; set; }
		[IdlName("AS_ContextSec")]
		public ushort TargetRequires { get; set; }
		[IdlName("AS_ContextSec")]
		public byte[] ClientAuthenticationMech { get; set; }
		[IdlName("AS_ContextSec")]
		public byte[] TargetName { get; set; }

		public AsContextSec()
		{
		}

		public AsContextSec(AsContextSec other)
		{
			TargetSupports = other.TargetSupports;
			TargetRequires = other.TargetRequires;
			ClientAuthenticationMech = other.ClientAuthenticationMech;
			TargetName = other.TargetName;
		}

		public AsContextSec(ushort targetSupports, ushort targetRequires, byte[] clientAuthenticationMech, byte[] targetName)
		{
			this.TargetSupports = targetSupports;
			this.TargetRequires = targetRequires;
			this.ClientAuthenticationMech = clientAuthenticationMech;
			this.TargetName = targetName;
		}

		public bool Equals(CSIIOP.AsContextSec? other)
		{
			if (other == null) return false;
			if (!TargetSupports.Equals(other.TargetSupports)) return false;
			if (!TargetRequires.Equals(other.TargetRequires)) return false;
			if (!ClientAuthenticationMech.SequenceEqual(other.ClientAuthenticationMech)) return false;
			if (!TargetName.SequenceEqual(other.TargetName)) return false;
			return true;
		}
	}

}
