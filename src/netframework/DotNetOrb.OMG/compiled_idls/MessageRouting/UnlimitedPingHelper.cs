/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:36
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace MessageRouting
{
	public static class UnlimitedPingHelper
	{
		private static volatile CORBA.TypeCode type;

		public static CORBA.TypeCode Type()
		{
			if (type == null)
			{
				lock (typeof(UnlimitedPingHelper))
				{
					if (type == null)
					{
						type = CORBA.ORB.Init().CreateValueTc(MessageRouting.UnlimitedPingHelper.Id(), "UnlimitedPing", 0, MessageRouting.RetryPolicyHelper.Type(), new CORBA.ValueMember[] {new CORBA.ValueMember("max_backoffs", "IDL:MessageRouting/UnlimitedPing/max_backoffs:1.0", "UnlimitedPing", "1.0", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 4), null, 1), new CORBA.ValueMember("backoff_factor", "IDL:MessageRouting/UnlimitedPing/backoff_factor:1.0", "UnlimitedPing", "1.0", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 6), null, 1), new CORBA.ValueMember("base_interval_seconds", "IDL:MessageRouting/UnlimitedPing/base_interval_seconds:1.0", "UnlimitedPing", "1.0", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 5), null, 1), });
					}
				}
			}
			return type;
		}

		public static void Insert(CORBA.Any any, MessageRouting.UnlimitedPing value)
		{
			any.InsertValue(value);
		}

		public static MessageRouting.UnlimitedPing Extract(CORBA.Any any)
		{
			try
			{
				return (MessageRouting.UnlimitedPing) any.ExtractValue();
			}
			catch (InvalidCastException ex)
			{
				throw new CORBA.Marshal(ex.Message);
			}
		}

		public static string Id()
		{
			return "IDL:MessageRouting/UnlimitedPing:1.0";
		}

		public static MessageRouting.UnlimitedPing Read(CORBA.IInputStream inputStream)
		{
			return (MessageRouting.UnlimitedPing) inputStream.ReadValue("IDL:MessageRouting/UnlimitedPing:1.0");
		}

		public static void Write(CORBA.IOutputStream outputStream, MessageRouting.UnlimitedPing value)
		{
			outputStream.WriteValue(value, "IDL:MessageRouting/UnlimitedPing:1.0");
		}

	}
}
