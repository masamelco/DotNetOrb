/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace GIOP
{
	[RepositoryID("IDL:GIOP/SystemExceptionReplyBody:1.0")]
	[Helper(typeof(SystemExceptionReplyBodyHelper))]
	public partial class SystemExceptionReplyBody: CORBA.IIDLEntity, IEquatable<GIOP.SystemExceptionReplyBody>
	{
		[IdlName("SystemExceptionReplyBody")]
		[WideChar(false)]
		public string ExceptionId { get; set; }
		[IdlName("SystemExceptionReplyBody")]
		public uint MinorCodeValue { get; set; }
		[IdlName("SystemExceptionReplyBody")]
		public uint CompletionStatus { get; set; }

		public SystemExceptionReplyBody()
		{
		}

		public SystemExceptionReplyBody(SystemExceptionReplyBody other)
		{
			ExceptionId = other.ExceptionId;
			MinorCodeValue = other.MinorCodeValue;
			CompletionStatus = other.CompletionStatus;
		}

		public SystemExceptionReplyBody(string exceptionId, uint minorCodeValue, uint completionStatus)
		{
			this.ExceptionId = exceptionId;
			this.MinorCodeValue = minorCodeValue;
			this.CompletionStatus = completionStatus;
		}

		public bool Equals(GIOP.SystemExceptionReplyBody? other)
		{
			if (other == null) return false;
			if (!ExceptionId.Equals(other.ExceptionId)) return false;
			if (!MinorCodeValue.Equals(other.MinorCodeValue)) return false;
			if (!CompletionStatus.Equals(other.CompletionStatus)) return false;
			return true;
		}
	}

}
