/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:37
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace ZIOP
{
	public static class CompressionEnablingPolicyValueHelper
	{
		private static volatile CORBA.TypeCode type;

		public static CORBA.TypeCode Type()
		{
			if (type == null)
			{
				lock (typeof(CompressionEnablingPolicyValueHelper))
				{
					if (type == null)
					{
						type = CORBA.ORB.Init().CreateAliasTc(ZIOP.CompressionEnablingPolicyValueHelper.Id(), "CompressionEnablingPolicyValue", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 8));
					}
				}
			}
			return type;
		}

		public static void Insert(CORBA.Any any, bool value)
		{
			any.Type = Type();
			Write(any.CreateOutputStream(), value);
		}

		public static bool Extract(CORBA.Any any)
		{
			var inputStream = any.CreateInputStream();
			try
			{
				return Read(inputStream);
			}
			finally
			{
				inputStream.Close();
			}
		}

		public static string Id()
		{
			return "IDL:omg.org/ZIOP/CompressionEnablingPolicyValue:1.0";
		}

		public static bool Read(CORBA.IInputStream inputStream)
		{
			bool result;
			result = inputStream.ReadBoolean();
			return result;
		}

		public static void Write(CORBA.IOutputStream outputStream, bool value)
		{
			outputStream.WriteBoolean(value);
		}

	}
}
