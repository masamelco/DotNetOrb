/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:38
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace ImplementationRepository
{
	[RepositoryID("IDL:ImplementationRepository/ServerInformation:1.0")]
	[Helper(typeof(ServerInformationHelper))]
	public partial class ServerInformation: CORBA.IIDLEntity, IEquatable<ImplementationRepository.ServerInformation>
	{
		[IdlName("ServerInformation")]
		[WideChar(false)]
		public string Server { get; set; }
		[IdlName("ServerInformation")]
		public ImplementationRepository.StartupOptions Startup { get; set; }
		[IdlName("ServerInformation")]
		[WideChar(false)]
		public string PartialIor { get; set; }
		[IdlName("ServerInformation")]
		public ImplementationRepository.ServerActiveStatus ActiveStatus { get; set; }

		public ServerInformation()
		{
		}

		public ServerInformation(ServerInformation other)
		{
			Server = other.Server;
			Startup = other.Startup;
			PartialIor = other.PartialIor;
			ActiveStatus = other.ActiveStatus;
		}

		public ServerInformation(string server, ImplementationRepository.StartupOptions startup, string partialIor, ImplementationRepository.ServerActiveStatus activeStatus)
		{
			this.Server = server;
			this.Startup = startup;
			this.PartialIor = partialIor;
			this.ActiveStatus = activeStatus;
		}

		public bool Equals(ImplementationRepository.ServerInformation? other)
		{
			if (other == null) return false;
			if (!Server.Equals(other.Server)) return false;
			if (!Startup.Equals(other.Startup)) return false;
			if (!PartialIor.Equals(other.PartialIor)) return false;
			if (!ActiveStatus.Equals(other.ActiveStatus)) return false;
			return true;
		}
	}

}
