/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:38
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace ImplementationRepository
{

	public class ServerInformationIteratorPOATie: ServerInformationIteratorPOA
	{
		public IServerInformationIteratorOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public ServerInformationIteratorPOATie(IServerInformationIteratorOperations d)
		{
			_OperationsDelegate = d;
		}

		public ServerInformationIteratorPOATie(IServerInformationIteratorOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override ImplementationRepository.IServerInformationIterator _This()
		{
			return ImplementationRepository.ServerInformationIteratorHelper.Narrow(_ThisObject());
		}

		public override ImplementationRepository.IServerInformationIterator _This(CORBA.ORB orb)
		{
			return ImplementationRepository.ServerInformationIteratorHelper.Narrow(_ThisObject(orb));
		}

		[IdlName("next_n")]
		public override bool NextN(uint howMany, out ImplementationRepository.ServerInformation[] servers)
		{
			return _OperationsDelegate.NextN(howMany, out servers);
		}
		[IdlName("destroy")]
		public override void Destroy()
		{
			_OperationsDelegate.Destroy();
		}
	}
}
