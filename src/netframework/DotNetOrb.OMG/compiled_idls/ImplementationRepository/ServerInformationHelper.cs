/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:38
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace ImplementationRepository
{
	public static class ServerInformationHelper
	{
		private static volatile CORBA.TypeCode type;

		public static CORBA.TypeCode Type()
		{
			if (type == null)
			{
				lock (typeof(ServerInformationHelper))
				{
					if (type == null)
					{
						type = CORBA.ORB.Init().CreateStructTc(ImplementationRepository.ServerInformationHelper.Id(), "ServerInformation", new CORBA.StructMember[] {new CORBA.StructMember("server", CORBA.ORB.Init().CreateStringTc(0), null), new CORBA.StructMember("startup", ImplementationRepository.StartupOptionsHelper.Type(), null), new CORBA.StructMember("partial_ior", CORBA.ORB.Init().CreateStringTc(0), null), new CORBA.StructMember("activeStatus", ImplementationRepository.ServerActiveStatusHelper.Type(), null), });
					}
				}
			}
			return type;
		}

		public static void Insert(CORBA.Any any, ImplementationRepository.ServerInformation s)
		{
			any.Type = Type();
			Write(any.CreateOutputStream(), s);
		}

		public static ImplementationRepository.ServerInformation Extract(CORBA.Any any)
		{
			var inputStream = any.CreateInputStream();
			try
			{
				return Read(inputStream);
			}
			finally
			{
				inputStream.Close();
			}
		}

		public static string Id()
		{
			return "IDL:ImplementationRepository/ServerInformation:1.0";
		}

		public static ImplementationRepository.ServerInformation Read(CORBA.IInputStream inputStream)
		{
			var result = new ImplementationRepository.ServerInformation();
			result.Server = inputStream.ReadString();
			result.Startup = ImplementationRepository.StartupOptionsHelper.Read(inputStream);
			result.PartialIor = inputStream.ReadString();
			result.ActiveStatus = ImplementationRepository.ServerActiveStatusHelper.Read(inputStream);
			return result;
		}

		public static void Write(CORBA.IOutputStream outputStream, ImplementationRepository.ServerInformation s)
		{
			outputStream.WriteString(s.Server);
			ImplementationRepository.StartupOptionsHelper.Write(outputStream, s.Startup);
			outputStream.WriteString(s.PartialIor);
			ImplementationRepository.ServerActiveStatusHelper.Write(outputStream, s.ActiveStatus);
		}

	}
}
