/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:37
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace DotNetOrb.ImR
{
	[RepositoryID("IDL:DotNetOrb/ImR/POAInfo:1.0")]
	[Helper(typeof(POAInfoHelper))]
	public partial class POAInfo: CORBA.IIDLEntity, IEquatable<DotNetOrb.ImR.POAInfo>
	{
		[IdlName("POAInfo")]
		[WideChar(false)]
		public string Name { get; set; }
		[IdlName("POAInfo")]
		[WideChar(false)]
		public string Host { get; set; }
		[IdlName("POAInfo")]
		public uint Port { get; set; }
		[IdlName("POAInfo")]
		[WideChar(false)]
		public string Server { get; set; }
		[IdlName("POAInfo")]
		public bool Active { get; set; }

		public POAInfo()
		{
		}

		public POAInfo(POAInfo other)
		{
			Name = other.Name;
			Host = other.Host;
			Port = other.Port;
			Server = other.Server;
			Active = other.Active;
		}

		public POAInfo(string name, string host, uint port, string server, bool active)
		{
			this.Name = name;
			this.Host = host;
			this.Port = port;
			this.Server = server;
			this.Active = active;
		}

		public bool Equals(DotNetOrb.ImR.POAInfo? other)
		{
			if (other == null) return false;
			if (!Name.Equals(other.Name)) return false;
			if (!Host.Equals(other.Host)) return false;
			if (!Port.Equals(other.Port)) return false;
			if (!Server.Equals(other.Server)) return false;
			if (!Active.Equals(other.Active)) return false;
			return true;
		}
	}

}
