/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:37
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace DotNetOrb.ImR
{

	public class RegistrationPOATie: RegistrationPOA
	{
		public IRegistrationOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public RegistrationPOATie(IRegistrationOperations d)
		{
			_OperationsDelegate = d;
		}

		public RegistrationPOATie(IRegistrationOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override DotNetOrb.ImR.IRegistration _This()
		{
			return DotNetOrb.ImR.RegistrationHelper.Narrow(_ThisObject());
		}

		public override DotNetOrb.ImR.IRegistration _This(CORBA.ORB orb)
		{
			return DotNetOrb.ImR.RegistrationHelper.Narrow(_ThisObject(orb));
		}

		[IdlName("register_host")]
		[ThrowsIdlException(typeof(DotNetOrb.ImR.Registration.IllegalHostName))]
		[ThrowsIdlException(typeof(DotNetOrb.ImR.Registration.InvalidSSDRef))]
		public override void RegisterHost(DotNetOrb.ImR.HostInfo info)
		{
			_OperationsDelegate.RegisterHost(info);
		}
		[IdlName("set_server_down")]
		[ThrowsIdlException(typeof(DotNetOrb.ImR.UnknownServerName))]
		public override void SetServerDown([WideChar(false)] string name)
		{
			_OperationsDelegate.SetServerDown(name);
		}
		[IdlName("register_poa")]
		[ThrowsIdlException(typeof(DotNetOrb.ImR.Registration.IllegalPOAName))]
		[ThrowsIdlException(typeof(DotNetOrb.ImR.Registration.DuplicatePOAName))]
		[ThrowsIdlException(typeof(DotNetOrb.ImR.UnknownServerName))]
		public override void RegisterPoa([WideChar(false)] string name, [WideChar(false)] string server, [WideChar(false)] string host, uint port)
		{
			_OperationsDelegate.RegisterPoa(name, server, host, port);
		}
		[IdlName("get_imr_info")]
		public override DotNetOrb.ImR.ImRInfo GetImrInfo()
		{
			return _OperationsDelegate.GetImrInfo();
		}
	}
}
