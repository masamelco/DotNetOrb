/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace MIOP
{
	[RepositoryID("IDL:omg.org/MIOP/PacketHeader_1_0:1.0")]
	[Helper(typeof(PacketHeader10Helper))]
	public partial class PacketHeader10: CORBA.IIDLEntity, IEquatable<MIOP.PacketHeader10>
	{
		[IdlName("PacketHeader_1_0")]
		public char[] Magic { get; set; }
		[IdlName("PacketHeader_1_0")]
		public byte HdrVersion { get; set; }
		[IdlName("PacketHeader_1_0")]
		public byte Flags { get; set; }
		[IdlName("PacketHeader_1_0")]
		public ushort PacketLength { get; set; }
		[IdlName("PacketHeader_1_0")]
		public uint PacketNumber { get; set; }
		[IdlName("PacketHeader_1_0")]
		public uint NumberOfPackets { get; set; }
		[IdlName("PacketHeader_1_0")]
		public byte[] Id { get; set; }

		public PacketHeader10()
		{
		}

		public PacketHeader10(PacketHeader10 other)
		{
			Magic = other.Magic;
			HdrVersion = other.HdrVersion;
			Flags = other.Flags;
			PacketLength = other.PacketLength;
			PacketNumber = other.PacketNumber;
			NumberOfPackets = other.NumberOfPackets;
			Id = other.Id;
		}

		public PacketHeader10(char[] magic, byte hdrVersion, byte flags, ushort packetLength, uint packetNumber, uint numberOfPackets, byte[] id)
		{
			this.Magic = magic;
			this.HdrVersion = hdrVersion;
			this.Flags = flags;
			this.PacketLength = packetLength;
			this.PacketNumber = packetNumber;
			this.NumberOfPackets = numberOfPackets;
			this.Id = id;
		}

		public bool Equals(MIOP.PacketHeader10? other)
		{
			if (other == null) return false;
			if (!Magic.SequenceEqual(other.Magic)) return false;
			if (!HdrVersion.Equals(other.HdrVersion)) return false;
			if (!Flags.Equals(other.Flags)) return false;
			if (!PacketLength.Equals(other.PacketLength)) return false;
			if (!PacketNumber.Equals(other.PacketNumber)) return false;
			if (!NumberOfPackets.Equals(other.NumberOfPackets)) return false;
			if (!Id.SequenceEqual(other.Id)) return false;
			return true;
		}
	}

}
