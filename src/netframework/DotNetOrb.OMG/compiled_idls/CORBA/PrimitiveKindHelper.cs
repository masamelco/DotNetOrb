/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace CORBA
{
	public static class PrimitiveKindHelper
	{
		private static volatile CORBA.TypeCode type;

		public static CORBA.TypeCode Type()
		{
			if (type == null)
			{
				lock (typeof(PrimitiveKindHelper))
				{
					if (type == null)
					{
						type = CORBA.ORB.Init().CreateEnumTc(CORBA.PrimitiveKindHelper.Id(),"PrimitiveKind", new String[] {"pk_null", "pk_void", "pk_short", "pk_long", "pk_ushort", "pk_ulong", "pk_float", "pk_double", "pk_boolean", "pk_char", "pk_octet", "pk_any", "pk_TypeCode", "pk_Principal", "pk_string", "pk_objref", "pk_longlong", "pk_ulonglong", "pk_longdouble", "pk_wchar", "pk_wstring", "pk_value_base"});
					}
				}
			}
			return type;
		}

		public static void Insert(CORBA.Any any, CORBA.PrimitiveKind value)
		{
			any.Type = Type();
			Write(any.CreateOutputStream(), value);
		}

		public static CORBA.PrimitiveKind Extract(CORBA.Any any)
		{
				var inputStream = any.CreateInputStream();
			try
			{
			return Read(inputStream);
			}
			finally
			{
				inputStream.Close();
			}
		}

		public static string Id()
		{
			return "IDL:CORBA/PrimitiveKind:1.0";
		}

		public static CORBA.PrimitiveKind Read(CORBA.IInputStream inputStream)
		{
			return (CORBA.PrimitiveKind) inputStream.ReadLong();
		}

		public static void Write(CORBA.IOutputStream outputStream, CORBA.PrimitiveKind value)
		{
			outputStream.WriteLong((int) value);
		}

	}
}
