/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:27
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace CORBA
{

	public class RepositoryPOATie: RepositoryPOA
	{
		public IRepositoryOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public RepositoryPOATie(IRepositoryOperations d)
		{
			_OperationsDelegate = d;
		}

		public RepositoryPOATie(IRepositoryOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override CORBA.IRepository _This()
		{
			return CORBA.RepositoryHelper.Narrow(_ThisObject());
		}

		public override CORBA.IRepository _This(CORBA.ORB orb)
		{
			return CORBA.RepositoryHelper.Narrow(_ThisObject(orb));
		}

		public override CORBA.DefinitionKind DefKind 
		{
			get
			{
				return _OperationsDelegate.DefKind;
			}
		}
		[IdlName("destroy")]
		public override void Destroy()
		{
			_OperationsDelegate.Destroy();
		}
		[IdlName("lookup")]
		public override CORBA.IContained Lookup([WideChar(false)] string searchName)
		{
			return _OperationsDelegate.Lookup(searchName);
		}
		[IdlName("contents")]
		public override CORBA.IContained[] Contents(CORBA.DefinitionKind limitType, bool excludeInherited)
		{
			return _OperationsDelegate.Contents(limitType, excludeInherited);
		}
		[IdlName("lookup_name")]
		public override CORBA.IContained[] LookupName([WideChar(false)] string searchName, int levelsToSearch, CORBA.DefinitionKind limitType, bool excludeInherited)
		{
			return _OperationsDelegate.LookupName(searchName, levelsToSearch, limitType, excludeInherited);
		}
		[IdlName("describe_contents")]
		public override CORBA.Container.Description[] DescribeContents(CORBA.DefinitionKind limitType, bool excludeInherited, int maxReturnedObjs)
		{
			return _OperationsDelegate.DescribeContents(limitType, excludeInherited, maxReturnedObjs);
		}
		[IdlName("create_module")]
		public override CORBA.IModuleDef CreateModule([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version)
		{
			return _OperationsDelegate.CreateModule(id, name, version);
		}
		[IdlName("create_constant")]
		public override CORBA.IConstantDef CreateConstant([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType type, CORBA.Any value)
		{
			return _OperationsDelegate.CreateConstant(id, name, version, type, value);
		}
		[IdlName("create_struct")]
		public override CORBA.IStructDef CreateStruct([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.StructMember[] members)
		{
			return _OperationsDelegate.CreateStruct(id, name, version, members);
		}
		[IdlName("create_union")]
		public override CORBA.IUnionDef CreateUnion([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType discriminatorType, CORBA.UnionMember[] members)
		{
			return _OperationsDelegate.CreateUnion(id, name, version, discriminatorType, members);
		}
		[IdlName("create_enum")]
		public override CORBA.IEnumDef CreateEnum([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, string[] members)
		{
			return _OperationsDelegate.CreateEnum(id, name, version, members);
		}
		[IdlName("create_alias")]
		public override CORBA.IAliasDef CreateAlias([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType originalType)
		{
			return _OperationsDelegate.CreateAlias(id, name, version, originalType);
		}
		[IdlName("create_interface")]
		public override CORBA.IInterfaceDef CreateInterface([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IInterfaceDef[] baseInterfaces, bool isAbstract)
		{
			return _OperationsDelegate.CreateInterface(id, name, version, baseInterfaces, isAbstract);
		}
		[IdlName("create_value")]
		public override CORBA.IValueDef CreateValue([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, bool isCustom, bool isAbstract, CORBA.IValueDef baseValue, bool isTruncatable, CORBA.IValueDef[] abstractBaseValues, CORBA.IInterfaceDef[] supportedInterfaces, CORBA.Initializer[] initializers)
		{
			return _OperationsDelegate.CreateValue(id, name, version, isCustom, isAbstract, baseValue, isTruncatable, abstractBaseValues, supportedInterfaces, initializers);
		}
		[IdlName("create_value_box")]
		public override CORBA.IValueBoxDef CreateValueBox([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType originalTypeDef)
		{
			return _OperationsDelegate.CreateValueBox(id, name, version, originalTypeDef);
		}
		[IdlName("create_exception")]
		public override CORBA.IExceptionDef CreateException([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.StructMember[] members)
		{
			return _OperationsDelegate.CreateException(id, name, version, members);
		}
		[IdlName("create_native")]
		public override CORBA.INativeDef CreateNative([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version)
		{
			return _OperationsDelegate.CreateNative(id, name, version);
		}
		[IdlName("create_abstract_interface")]
		public override CORBA.IAbstractInterfaceDef CreateAbstractInterface([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IAbstractInterfaceDef[] baseInterfaces)
		{
			return _OperationsDelegate.CreateAbstractInterface(id, name, version, baseInterfaces);
		}
		[IdlName("create_local_interface")]
		public override CORBA.ILocalInterfaceDef CreateLocalInterface([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IInterfaceDef[] baseInterfaces)
		{
			return _OperationsDelegate.CreateLocalInterface(id, name, version, baseInterfaces);
		}
		[IdlName("create_ext_value")]
		public override CORBA.IExtValueDef CreateExtValue([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, bool isCustom, bool isAbstract, CORBA.IValueDef baseValue, bool isTruncatable, CORBA.IValueDef[] abstractBaseValues, CORBA.IInterfaceDef[] supportedInterfaces, CORBA.ExtInitializer[] initializers)
		{
			return _OperationsDelegate.CreateExtValue(id, name, version, isCustom, isAbstract, baseValue, isTruncatable, abstractBaseValues, supportedInterfaces, initializers);
		}
		[IdlName("lookup_id")]
		public override CORBA.IContained LookupId([WideChar(false)] string searchId)
		{
			return _OperationsDelegate.LookupId(searchId);
		}
		[IdlName("get_canonical_typecode")]
		public override CORBA.TypeCode GetCanonicalTypecode(CORBA.TypeCode tc)
		{
			return _OperationsDelegate.GetCanonicalTypecode(tc);
		}
		[IdlName("get_primitive")]
		public override CORBA.IPrimitiveDef GetPrimitive(CORBA.PrimitiveKind kind)
		{
			return _OperationsDelegate.GetPrimitive(kind);
		}
		[IdlName("create_string")]
		public override CORBA.IStringDef CreateString(uint bound)
		{
			return _OperationsDelegate.CreateString(bound);
		}
		[IdlName("create_wstring")]
		public override CORBA.IWstringDef CreateWstring(uint bound)
		{
			return _OperationsDelegate.CreateWstring(bound);
		}
		[IdlName("create_sequence")]
		public override CORBA.ISequenceDef CreateSequence(uint bound, CORBA.IIDLType elementType)
		{
			return _OperationsDelegate.CreateSequence(bound, elementType);
		}
		[IdlName("create_array")]
		public override CORBA.IArrayDef CreateArray(uint length, CORBA.IIDLType elementType)
		{
			return _OperationsDelegate.CreateArray(length, elementType);
		}
		[IdlName("create_fixed")]
		public override CORBA.IFixedDef CreateFixed(ushort digits, short scale)
		{
			return _OperationsDelegate.CreateFixed(digits, scale);
		}
	}
}
