/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:27
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace CORBA
{

	public class ExtValueDefPOATie: ExtValueDefPOA
	{
		public IExtValueDefOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public ExtValueDefPOATie(IExtValueDefOperations d)
		{
			_OperationsDelegate = d;
		}

		public ExtValueDefPOATie(IExtValueDefOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override CORBA.IExtValueDef _This()
		{
			return CORBA.ExtValueDefHelper.Narrow(_ThisObject());
		}

		public override CORBA.IExtValueDef _This(CORBA.ORB orb)
		{
			return CORBA.ExtValueDefHelper.Narrow(_ThisObject(orb));
		}

		public override CORBA.DefinitionKind DefKind 
		{
			get
			{
				return _OperationsDelegate.DefKind;
			}
		}
		[IdlName("destroy")]
		public override void Destroy()
		{
			_OperationsDelegate.Destroy();
		}
		[IdlName("lookup")]
		public override CORBA.IContained Lookup([WideChar(false)] string searchName)
		{
			return _OperationsDelegate.Lookup(searchName);
		}
		[IdlName("contents")]
		public override CORBA.IContained[] Contents(CORBA.DefinitionKind limitType, bool excludeInherited)
		{
			return _OperationsDelegate.Contents(limitType, excludeInherited);
		}
		[IdlName("lookup_name")]
		public override CORBA.IContained[] LookupName([WideChar(false)] string searchName, int levelsToSearch, CORBA.DefinitionKind limitType, bool excludeInherited)
		{
			return _OperationsDelegate.LookupName(searchName, levelsToSearch, limitType, excludeInherited);
		}
		[IdlName("describe_contents")]
		public override CORBA.Container.Description[] DescribeContents(CORBA.DefinitionKind limitType, bool excludeInherited, int maxReturnedObjs)
		{
			return _OperationsDelegate.DescribeContents(limitType, excludeInherited, maxReturnedObjs);
		}
		[IdlName("create_module")]
		public override CORBA.IModuleDef CreateModule([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version)
		{
			return _OperationsDelegate.CreateModule(id, name, version);
		}
		[IdlName("create_constant")]
		public override CORBA.IConstantDef CreateConstant([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType type, CORBA.Any value)
		{
			return _OperationsDelegate.CreateConstant(id, name, version, type, value);
		}
		[IdlName("create_struct")]
		public override CORBA.IStructDef CreateStruct([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.StructMember[] members)
		{
			return _OperationsDelegate.CreateStruct(id, name, version, members);
		}
		[IdlName("create_union")]
		public override CORBA.IUnionDef CreateUnion([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType discriminatorType, CORBA.UnionMember[] members)
		{
			return _OperationsDelegate.CreateUnion(id, name, version, discriminatorType, members);
		}
		[IdlName("create_enum")]
		public override CORBA.IEnumDef CreateEnum([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, string[] members)
		{
			return _OperationsDelegate.CreateEnum(id, name, version, members);
		}
		[IdlName("create_alias")]
		public override CORBA.IAliasDef CreateAlias([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType originalType)
		{
			return _OperationsDelegate.CreateAlias(id, name, version, originalType);
		}
		[IdlName("create_interface")]
		public override CORBA.IInterfaceDef CreateInterface([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IInterfaceDef[] baseInterfaces, bool isAbstract)
		{
			return _OperationsDelegate.CreateInterface(id, name, version, baseInterfaces, isAbstract);
		}
		[IdlName("create_value")]
		public override CORBA.IValueDef CreateValue([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, bool isCustom, bool isAbstract, CORBA.IValueDef baseValue, bool isTruncatable, CORBA.IValueDef[] abstractBaseValues, CORBA.IInterfaceDef[] supportedInterfaces, CORBA.Initializer[] initializers)
		{
			return _OperationsDelegate.CreateValue(id, name, version, isCustom, isAbstract, baseValue, isTruncatable, abstractBaseValues, supportedInterfaces, initializers);
		}
		[IdlName("create_value_box")]
		public override CORBA.IValueBoxDef CreateValueBox([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType originalTypeDef)
		{
			return _OperationsDelegate.CreateValueBox(id, name, version, originalTypeDef);
		}
		[IdlName("create_exception")]
		public override CORBA.IExceptionDef CreateException([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.StructMember[] members)
		{
			return _OperationsDelegate.CreateException(id, name, version, members);
		}
		[IdlName("create_native")]
		public override CORBA.INativeDef CreateNative([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version)
		{
			return _OperationsDelegate.CreateNative(id, name, version);
		}
		[IdlName("create_abstract_interface")]
		public override CORBA.IAbstractInterfaceDef CreateAbstractInterface([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IAbstractInterfaceDef[] baseInterfaces)
		{
			return _OperationsDelegate.CreateAbstractInterface(id, name, version, baseInterfaces);
		}
		[IdlName("create_local_interface")]
		public override CORBA.ILocalInterfaceDef CreateLocalInterface([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IInterfaceDef[] baseInterfaces)
		{
			return _OperationsDelegate.CreateLocalInterface(id, name, version, baseInterfaces);
		}
		[IdlName("create_ext_value")]
		public override CORBA.IExtValueDef CreateExtValue([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, bool isCustom, bool isAbstract, CORBA.IValueDef baseValue, bool isTruncatable, CORBA.IValueDef[] abstractBaseValues, CORBA.IInterfaceDef[] supportedInterfaces, CORBA.ExtInitializer[] initializers)
		{
			return _OperationsDelegate.CreateExtValue(id, name, version, isCustom, isAbstract, baseValue, isTruncatable, abstractBaseValues, supportedInterfaces, initializers);
		}
		[WideChar(false)]
		public override string Id 
		{
			get
			{
				return _OperationsDelegate.Id;
			}

			set
			{
				_OperationsDelegate.Id = value;
			}
		}
		[WideChar(false)]
		public override string Name 
		{
			get
			{
				return _OperationsDelegate.Name;
			}

			set
			{
				_OperationsDelegate.Name = value;
			}
		}
		[WideChar(false)]
		public override string Version 
		{
			get
			{
				return _OperationsDelegate.Version;
			}

			set
			{
				_OperationsDelegate.Version = value;
			}
		}
		public override CORBA.IContainer DefinedIn 
		{
			get
			{
				return _OperationsDelegate.DefinedIn;
			}
		}
		[WideChar(false)]
		public override string AbsoluteName 
		{
			get
			{
				return _OperationsDelegate.AbsoluteName;
			}
		}
		public override CORBA.IRepository ContainingRepository 
		{
			get
			{
				return _OperationsDelegate.ContainingRepository;
			}
		}
		[IdlName("describe")]
		public override CORBA.Contained.Description Describe()
		{
			return _OperationsDelegate.Describe();
		}
		[IdlName("move")]
		public override void Move(CORBA.IContainer newContainer, [WideChar(false)] string newName, [WideChar(false)] string newVersion)
		{
			_OperationsDelegate.Move(newContainer, newName, newVersion);
		}
		public override CORBA.TypeCode Type 
		{
			get
			{
				return _OperationsDelegate.Type;
			}
		}
		public override CORBA.IInterfaceDef[] SupportedInterfaces 
		{
			get
			{
				return _OperationsDelegate.SupportedInterfaces;
			}

			set
			{
				_OperationsDelegate.SupportedInterfaces = value;
			}
		}
		public override CORBA.Initializer[] Initializers 
		{
			get
			{
				return _OperationsDelegate.Initializers;
			}

			set
			{
				_OperationsDelegate.Initializers = value;
			}
		}
		public override CORBA.IValueDef BaseValue 
		{
			get
			{
				return _OperationsDelegate.BaseValue;
			}

			set
			{
				_OperationsDelegate.BaseValue = value;
			}
		}
		public override CORBA.IValueDef[] AbstractBaseValues 
		{
			get
			{
				return _OperationsDelegate.AbstractBaseValues;
			}

			set
			{
				_OperationsDelegate.AbstractBaseValues = value;
			}
		}
		public override bool IsAbstract 
		{
			get
			{
				return _OperationsDelegate.IsAbstract;
			}

			set
			{
				_OperationsDelegate.IsAbstract = value;
			}
		}
		public override bool IsCustom 
		{
			get
			{
				return _OperationsDelegate.IsCustom;
			}

			set
			{
				_OperationsDelegate.IsCustom = value;
			}
		}
		public override bool IsTruncatable 
		{
			get
			{
				return _OperationsDelegate.IsTruncatable;
			}

			set
			{
				_OperationsDelegate.IsTruncatable = value;
			}
		}
		[IdlName("is_a")]
		public override bool IsA([WideChar(false)] string id)
		{
			return _OperationsDelegate.IsA(id);
		}
		[IdlName("describe_value")]
		public override CORBA.ValueDef.FullValueDescription DescribeValue()
		{
			return _OperationsDelegate.DescribeValue();
		}
		[IdlName("create_value_member")]
		public override CORBA.IValueMemberDef CreateValueMember([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType type, short access)
		{
			return _OperationsDelegate.CreateValueMember(id, name, version, type, access);
		}
		[IdlName("create_attribute")]
		public override CORBA.IAttributeDef CreateAttribute([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType type, CORBA.AttributeMode mode)
		{
			return _OperationsDelegate.CreateAttribute(id, name, version, type, mode);
		}
		[IdlName("create_operation")]
		public override CORBA.IOperationDef CreateOperation([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType result, CORBA.OperationMode mode, CORBA.ParameterDescription[] @params, CORBA.IExceptionDef[] exceptions, string[] contexts)
		{
			return _OperationsDelegate.CreateOperation(id, name, version, result, mode, @params, exceptions, contexts);
		}
		public override CORBA.ExtInitializer[] ExtInitializers 
		{
			get
			{
				return _OperationsDelegate.ExtInitializers;
			}

			set
			{
				_OperationsDelegate.ExtInitializers = value;
			}
		}
		[IdlName("describe_ext_value")]
		public override CORBA.ExtValueDef.ExtFullValueDescription DescribeExtValue()
		{
			return _OperationsDelegate.DescribeExtValue();
		}
		[IdlName("create_ext_attribute")]
		public override CORBA.IExtAttributeDef CreateExtAttribute([WideChar(false)] string id, [WideChar(false)] string name, [WideChar(false)] string version, CORBA.IIDLType type, CORBA.AttributeMode mode, CORBA.IExceptionDef[] getExceptions, CORBA.IExceptionDef[] setExceptions)
		{
			return _OperationsDelegate.CreateExtAttribute(id, name, version, type, mode, getExceptions, setExceptions);
		}
	}
}
