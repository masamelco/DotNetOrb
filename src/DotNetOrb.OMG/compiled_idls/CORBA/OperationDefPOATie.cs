/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:27
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace CORBA
{

	public class OperationDefPOATie: OperationDefPOA
	{
		public IOperationDefOperations _OperationsDelegate { get; set; }
		private PortableServer.IPOA _poa;

		public OperationDefPOATie(IOperationDefOperations d)
		{
			_OperationsDelegate = d;
		}

		public OperationDefPOATie(IOperationDefOperations d, PortableServer.POA poa)
		{
			_OperationsDelegate = d;
			_poa = poa;
		}

		public override PortableServer.IPOA _DefaultPOA()
		{
			if (_poa != null)
			{
				return _poa;
			}
			return base._DefaultPOA();
		}

		public override CORBA.IOperationDef _This()
		{
			return CORBA.OperationDefHelper.Narrow(_ThisObject());
		}

		public override CORBA.IOperationDef _This(CORBA.ORB orb)
		{
			return CORBA.OperationDefHelper.Narrow(_ThisObject(orb));
		}

		public override CORBA.DefinitionKind DefKind 
		{
			get
			{
				return _OperationsDelegate.DefKind;
			}
		}
		[IdlName("destroy")]
		public override void Destroy()
		{
			_OperationsDelegate.Destroy();
		}
		[WideChar(false)]
		public override string Id 
		{
			get
			{
				return _OperationsDelegate.Id;
			}

			set
			{
				_OperationsDelegate.Id = value;
			}
		}
		[WideChar(false)]
		public override string Name 
		{
			get
			{
				return _OperationsDelegate.Name;
			}

			set
			{
				_OperationsDelegate.Name = value;
			}
		}
		[WideChar(false)]
		public override string Version 
		{
			get
			{
				return _OperationsDelegate.Version;
			}

			set
			{
				_OperationsDelegate.Version = value;
			}
		}
		public override CORBA.IContainer DefinedIn 
		{
			get
			{
				return _OperationsDelegate.DefinedIn;
			}
		}
		[WideChar(false)]
		public override string AbsoluteName 
		{
			get
			{
				return _OperationsDelegate.AbsoluteName;
			}
		}
		public override CORBA.IRepository ContainingRepository 
		{
			get
			{
				return _OperationsDelegate.ContainingRepository;
			}
		}
		[IdlName("describe")]
		public override CORBA.Contained.Description Describe()
		{
			return _OperationsDelegate.Describe();
		}
		[IdlName("move")]
		public override void Move(CORBA.IContainer newContainer, [WideChar(false)] string newName, [WideChar(false)] string newVersion)
		{
			_OperationsDelegate.Move(newContainer, newName, newVersion);
		}
		public override CORBA.TypeCode Result 
		{
			get
			{
				return _OperationsDelegate.Result;
			}
		}
		public override CORBA.IIDLType ResultDef 
		{
			get
			{
				return _OperationsDelegate.ResultDef;
			}

			set
			{
				_OperationsDelegate.ResultDef = value;
			}
		}
		public override CORBA.ParameterDescription[] Params 
		{
			get
			{
				return _OperationsDelegate.Params;
			}

			set
			{
				_OperationsDelegate.Params = value;
			}
		}
		public override CORBA.OperationMode Mode 
		{
			get
			{
				return _OperationsDelegate.Mode;
			}

			set
			{
				_OperationsDelegate.Mode = value;
			}
		}
		public override string[] Contexts 
		{
			get
			{
				return _OperationsDelegate.Contexts;
			}

			set
			{
				_OperationsDelegate.Contexts = value;
			}
		}
		public override CORBA.IExceptionDef[] Exceptions 
		{
			get
			{
				return _OperationsDelegate.Exceptions;
			}

			set
			{
				_OperationsDelegate.Exceptions = value;
			}
		}
	}
}
