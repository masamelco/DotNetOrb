/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace GIOP
{
	[RepositoryID("IDL:GIOP/ReplyHeader_1_2:1.0")]
	[Helper(typeof(ReplyHeader12Helper))]
	public partial class ReplyHeader12: CORBA.IIDLEntity, IEquatable<GIOP.ReplyHeader12>
	{
		[IdlName("ReplyHeader_1_2")]
		public uint RequestId { get; set; }
		[IdlName("ReplyHeader_1_2")]
		public GIOP.ReplyStatusType12 ReplyStatus { get; set; }
		[IdlName("ReplyHeader_1_2")]
		public IOP.ServiceContext[] ServiceContext { get; set; }

		public ReplyHeader12()
		{
		}

		public ReplyHeader12(ReplyHeader12 other)
		{
			RequestId = other.RequestId;
			ReplyStatus = other.ReplyStatus;
			ServiceContext = other.ServiceContext;
		}

		public ReplyHeader12(uint requestId, GIOP.ReplyStatusType12 replyStatus, IOP.ServiceContext[] serviceContext)
		{
			this.RequestId = requestId;
			this.ReplyStatus = replyStatus;
			this.ServiceContext = serviceContext;
		}

		public bool Equals(GIOP.ReplyHeader12? other)
		{
			if (other == null) return false;
			if (!RequestId.Equals(other.RequestId)) return false;
			if (!ReplyStatus.Equals(other.ReplyStatus)) return false;
			if (!ServiceContext.SequenceEqual(other.ServiceContext)) return false;
			return true;
		}
	}

}
