/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace GIOP
{
	[RepositoryID("IDL:GIOP/RequestHeader_1_2:1.0")]
	[Helper(typeof(RequestHeader12Helper))]
	public partial class RequestHeader12: CORBA.IIDLEntity, IEquatable<GIOP.RequestHeader12>
	{
		[IdlName("RequestHeader_1_2")]
		public uint RequestId { get; set; }
		[IdlName("RequestHeader_1_2")]
		public byte ResponseFlags { get; set; }
		[IdlName("RequestHeader_1_2")]
		public byte[] Reserved { get; set; }
		[IdlName("RequestHeader_1_2")]
		public GIOP.TargetAddress Target { get; set; }
		[IdlName("RequestHeader_1_2")]
		[WideChar(false)]
		public string Operation { get; set; }
		[IdlName("RequestHeader_1_2")]
		public IOP.ServiceContext[] ServiceContext { get; set; }

		public RequestHeader12()
		{
		}

		public RequestHeader12(RequestHeader12 other)
		{
			RequestId = other.RequestId;
			ResponseFlags = other.ResponseFlags;
			Reserved = other.Reserved;
			Target = other.Target;
			Operation = other.Operation;
			ServiceContext = other.ServiceContext;
		}

		public RequestHeader12(uint requestId, byte responseFlags, byte[] reserved, GIOP.TargetAddress target, string operation, IOP.ServiceContext[] serviceContext)
		{
			this.RequestId = requestId;
			this.ResponseFlags = responseFlags;
			this.Reserved = reserved;
			this.Target = target;
			this.Operation = operation;
			this.ServiceContext = serviceContext;
		}

		public bool Equals(GIOP.RequestHeader12? other)
		{
			if (other == null) return false;
			if (!RequestId.Equals(other.RequestId)) return false;
			if (!ResponseFlags.Equals(other.ResponseFlags)) return false;
			if (!Reserved.SequenceEqual(other.Reserved)) return false;
			if (!Target.Equals(other.Target)) return false;
			if (!Operation.Equals(other.Operation)) return false;
			if (!ServiceContext.SequenceEqual(other.ServiceContext)) return false;
			return true;
		}
	}

}
