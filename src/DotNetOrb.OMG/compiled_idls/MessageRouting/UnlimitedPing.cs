/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:36
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace MessageRouting
{
	[IdlName("UnlimitedPing")]
	[RepositoryID("IDL:MessageRouting/UnlimitedPing:1.0")]
	[Helper(typeof(UnlimitedPingHelper))]
	public abstract class UnlimitedPing : MessageRouting.RetryPolicy, CORBA.IStreamableValue
	{
		public override string[] _TruncatableIds { get => new[] {"IDL:MessageRouting/UnlimitedPing:1.0"}; } 

		public override CORBA.TypeCode _Type { get => MessageRouting.UnlimitedPingHelper.Type(); }


		[IdlName("max_backoffs")]
		public short MaxBackoffs { get; set; }
		[IdlName("backoff_factor")]
		public float BackoffFactor { get; set; }
		[IdlName("base_interval_seconds")]
		public uint BaseIntervalSeconds { get; set; }


		public override void _Write(CORBA.IOutputStream outputStream)
		{
			base._Write(outputStream);
			outputStream.WriteShort(MaxBackoffs);
			outputStream.WriteFloat(BackoffFactor);
			outputStream.WriteULong(BaseIntervalSeconds);
		}

		public override void _Read(CORBA.IInputStream inputStream)
		{
			base._Read(inputStream);
			MaxBackoffs = inputStream.ReadShort();
			BackoffFactor = inputStream.ReadFloat();
			BaseIntervalSeconds = inputStream.ReadULong();
		}
	}
}

