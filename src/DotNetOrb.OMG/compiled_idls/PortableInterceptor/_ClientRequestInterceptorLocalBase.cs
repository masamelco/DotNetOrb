/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:37
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace PortableInterceptor
{
	public abstract class _ClientRequestInterceptorLocalBase: CORBA.LocalObject, IClientRequestInterceptor
	{
		private string[] _ids = {"IDL:PortableInterceptor/ClientRequestInterceptor:1.0","IDL:PortableInterceptor/Interceptor:1.0"};

		public override string[] _Ids()
		{
			return _ids;
		}

		[IdlName("name")]
		[WideChar(false)]
		public abstract string Name 
		{
			get;
		}
		[IdlName("destroy")]
		public abstract void Destroy();
		[IdlName("send_request")]
		[ThrowsIdlException(typeof(PortableInterceptor.ForwardRequest))]
		public abstract void SendRequest(PortableInterceptor.IClientRequestInfo ri);
		[IdlName("send_poll")]
		public abstract void SendPoll(PortableInterceptor.IClientRequestInfo ri);
		[IdlName("receive_reply")]
		public abstract void ReceiveReply(PortableInterceptor.IClientRequestInfo ri);
		[IdlName("receive_exception")]
		[ThrowsIdlException(typeof(PortableInterceptor.ForwardRequest))]
		public abstract void ReceiveException(PortableInterceptor.IClientRequestInfo ri);
		[IdlName("receive_other")]
		[ThrowsIdlException(typeof(PortableInterceptor.ForwardRequest))]
		public abstract void ReceiveOther(PortableInterceptor.IClientRequestInfo ri);
	}

}
