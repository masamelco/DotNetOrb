/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:37
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace Compression
{
	[IdlName("CompressionException")]
	[RepositoryID("IDL:omg.org/Compression/CompressionException:1.0")]
	[Helper(typeof(CompressionExceptionHelper))]
	public partial class CompressionException: CORBA.UserException, CORBA.IIDLEntity, IEquatable<Compression.CompressionException>
	{
		public CompressionException()
		{
		}

		public CompressionException(string _msg): base(_msg)
		{
		}

		public CompressionException(CompressionException other)
		{
			Reason = other.Reason;
			Description = other.Description;
		}

		public CompressionException(int reason, string description, string _msg = ""): base(_msg)
		{
			this.Reason = reason;
			this.Description = description;
		}

		public bool Equals(Compression.CompressionException? other)
		{
			if (other == null) return false;
			if (!Reason.Equals(other.Reason)) return false;
			if (!Description.Equals(other.Description)) return false;
			return true;
		}
		[IdlName("reason")]
		public int Reason { get; set; }
		[IdlName("description")]
		[WideChar(false)]
		public string Description { get; set; }
	}

}
