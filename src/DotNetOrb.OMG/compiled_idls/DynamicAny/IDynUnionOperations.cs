/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:38
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace DynamicAny
{
	public interface IDynUnionOperations : DynamicAny.IDynAnyOperations
	{
		[IdlName("get_discriminator")]
		public DynamicAny.IDynAny GetDiscriminator();
		[IdlName("set_discriminator")]
		[ThrowsIdlException(typeof(DynamicAny.DynAny.TypeMismatch))]
		public void SetDiscriminator(DynamicAny.IDynAny d);
		[IdlName("set_to_default_member")]
		[ThrowsIdlException(typeof(DynamicAny.DynAny.TypeMismatch))]
		public void SetToDefaultMember();
		[IdlName("set_to_no_active_member")]
		[ThrowsIdlException(typeof(DynamicAny.DynAny.TypeMismatch))]
		public void SetToNoActiveMember();
		[IdlName("has_no_active_member")]
		public bool HasNoActiveMember();
		[IdlName("discriminator_kind")]
		public CORBA.TCKind DiscriminatorKind();
		[IdlName("member")]
		[ThrowsIdlException(typeof(DynamicAny.DynAny.InvalidValue))]
		public DynamicAny.IDynAny Member();
		[IdlName("member_name")]
		[ThrowsIdlException(typeof(DynamicAny.DynAny.InvalidValue))]
		[return: WideChar(false)]
		public string MemberName();
		[IdlName("member_kind")]
		[ThrowsIdlException(typeof(DynamicAny.DynAny.InvalidValue))]
		public CORBA.TCKind MemberKind();
	}
}

