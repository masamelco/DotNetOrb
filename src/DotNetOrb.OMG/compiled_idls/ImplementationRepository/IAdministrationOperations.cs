/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:38
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace ImplementationRepository
{
	public interface IAdministrationOperations
	{
		[IdlName("activate_server")]
		[ThrowsIdlException(typeof(ImplementationRepository.NotFound))]
		[ThrowsIdlException(typeof(ImplementationRepository.CannotActivate))]
		public void ActivateServer([WideChar(false)] string server);
		[IdlName("add_or_update_server")]
		[ThrowsIdlException(typeof(ImplementationRepository.NotFound))]
		public void AddOrUpdateServer([WideChar(false)] string server, ImplementationRepository.StartupOptions options);
		[IdlName("remove_server")]
		[ThrowsIdlException(typeof(ImplementationRepository.NotFound))]
		public void RemoveServer([WideChar(false)] string server);
		[IdlName("shutdown_server")]
		[ThrowsIdlException(typeof(ImplementationRepository.NotFound))]
		public void ShutdownServer([WideChar(false)] string server);
		[IdlName("server_is_running")]
		[ThrowsIdlException(typeof(ImplementationRepository.NotFound))]
		public void ServerIsRunning([WideChar(false)] string server, [WideChar(false)] string partialIor, ImplementationRepository.IServerObject serverObject);
		[IdlName("server_is_shutting_down")]
		[ThrowsIdlException(typeof(ImplementationRepository.NotFound))]
		public void ServerIsShuttingDown([WideChar(false)] string server);
		[IdlName("find")]
		public void Find([WideChar(false)] string server, out ImplementationRepository.ServerInformation info);
		[IdlName("list")]
		public void List(uint howMany, bool determineActiveStatus, out ImplementationRepository.ServerInformation[] serverList, out ImplementationRepository.IServerInformationIterator serverIterator);
		[IdlName("shutdown")]
		public void Shutdown(bool activators, bool servers);
	}
}

