/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:34
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace Messaging
{
	public static class ExceptionHolderHelper
	{
		private static volatile CORBA.TypeCode type;

		public static CORBA.TypeCode Type()
		{
			if (type == null)
			{
				lock (typeof(ExceptionHolderHelper))
				{
					if (type == null)
					{
						type = CORBA.ORB.Init().CreateValueTc(Messaging.ExceptionHolderHelper.Id(), "ExceptionHolder", 0, null, new CORBA.ValueMember[] {new CORBA.ValueMember("is_system_exception", "IDL:Messaging/ExceptionHolder/is_system_exception:1.0", "ExceptionHolder", "1.0", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 8), null, 0), new CORBA.ValueMember("byte_order", "IDL:Messaging/ExceptionHolder/byte_order:1.0", "ExceptionHolder", "1.0", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 8), null, 0), new CORBA.ValueMember("marshaled_exception", "IDL:Messaging/ExceptionHolder/marshaled_exception:1.0", "ExceptionHolder", "1.0", CORBA.ORB.Init().CreateSequenceTc(0, CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 10)), null, 0), });
					}
				}
			}
			return type;
		}

		public static void Insert(CORBA.Any any, Messaging.ExceptionHolder value)
		{
			any.InsertValue(value);
		}

		public static Messaging.ExceptionHolder Extract(CORBA.Any any)
		{
			try
			{
				return (Messaging.ExceptionHolder) any.ExtractValue();
			}
			catch (InvalidCastException ex)
			{
				throw new CORBA.Marshal(ex.Message);
			}
		}

		public static string Id()
		{
			return "IDL:Messaging/ExceptionHolder:1.0";
		}

		public static Messaging.ExceptionHolder Read(CORBA.IInputStream inputStream)
		{
			return (Messaging.ExceptionHolder) inputStream.ReadValue("IDL:Messaging/ExceptionHolder:1.0");
		}

		public static void Write(CORBA.IOutputStream outputStream, Messaging.ExceptionHolder value)
		{
			outputStream.WriteValue(value, "IDL:Messaging/ExceptionHolder:1.0");
		}

	}
}
