/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace IOP
{
	[RepositoryID("IDL:IOP/ServiceContext:1.0")]
	[Helper(typeof(ServiceContextHelper))]
	public partial class ServiceContext: CORBA.IIDLEntity, IEquatable<IOP.ServiceContext>
	{
		[IdlName("ServiceContext")]
		public uint ContextId { get; set; }
		[IdlName("ServiceContext")]
		public byte[] ContextData { get; set; }

		public ServiceContext()
		{
		}

		public ServiceContext(ServiceContext other)
		{
			ContextId = other.ContextId;
			ContextData = other.ContextData;
		}

		public ServiceContext(uint contextId, byte[] contextData)
		{
			this.ContextId = contextId;
			this.ContextData = contextData;
		}

		public bool Equals(IOP.ServiceContext? other)
		{
			if (other == null) return false;
			if (!ContextId.Equals(other.ContextId)) return false;
			if (!ContextData.SequenceEqual(other.ContextData)) return false;
			return true;
		}
	}

}
