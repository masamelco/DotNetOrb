/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace IOP
{
	[RepositoryID("IDL:IOP/Encoding:1.0")]
	[Helper(typeof(EncodingHelper))]
	public partial class Encoding: CORBA.IIDLEntity, IEquatable<IOP.Encoding>
	{
		[IdlName("Encoding")]
		public short Format { get; set; }
		[IdlName("Encoding")]
		public byte MajorVersion { get; set; }
		[IdlName("Encoding")]
		public byte MinorVersion { get; set; }

		public Encoding()
		{
		}

		public Encoding(Encoding other)
		{
			Format = other.Format;
			MajorVersion = other.MajorVersion;
			MinorVersion = other.MinorVersion;
		}

		public Encoding(short format, byte majorVersion, byte minorVersion)
		{
			this.Format = format;
			this.MajorVersion = majorVersion;
			this.MinorVersion = minorVersion;
		}

		public bool Equals(IOP.Encoding? other)
		{
			if (other == null) return false;
			if (!Format.Equals(other.Format)) return false;
			if (!MajorVersion.Equals(other.MajorVersion)) return false;
			if (!MinorVersion.Equals(other.MinorVersion)) return false;
			return true;
		}
	}

}
