/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:30
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace CosNaming
{
	public static class BindingTypeHelper
	{
		private static volatile CORBA.TypeCode type;

		public static CORBA.TypeCode Type()
		{
			if (type == null)
			{
				lock (typeof(BindingTypeHelper))
				{
					if (type == null)
					{
						type = CORBA.ORB.Init().CreateEnumTc(CosNaming.BindingTypeHelper.Id(),"BindingType", new String[] {"nobject", "ncontext"});
					}
				}
			}
			return type;
		}

		public static void Insert(CORBA.Any any, CosNaming.BindingType value)
		{
			any.Type = Type();
			Write(any.CreateOutputStream(), value);
		}

		public static CosNaming.BindingType Extract(CORBA.Any any)
		{
				var inputStream = any.CreateInputStream();
			try
			{
			return Read(inputStream);
			}
			finally
			{
				inputStream.Close();
			}
		}

		public static string Id()
		{
			return "IDL:omg.org/CosNaming/BindingType:1.0";
		}

		public static CosNaming.BindingType Read(CORBA.IInputStream inputStream)
		{
			return (CosNaming.BindingType) inputStream.ReadLong();
		}

		public static void Write(CORBA.IOutputStream outputStream, CosNaming.BindingType value)
		{
			outputStream.WriteLong((int) value);
		}

	}
}
