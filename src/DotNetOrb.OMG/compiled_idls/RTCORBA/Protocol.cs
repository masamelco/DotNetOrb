/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:28
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace RTCORBA
{
	[RepositoryID("IDL:RTCORBA/Protocol:1.0")]
	[Helper(typeof(ProtocolHelper))]
	public partial class Protocol: CORBA.IIDLEntity, IEquatable<RTCORBA.Protocol>
	{
		[IdlName("Protocol")]
		public uint ProtocolType { get; set; }
		[IdlName("Protocol")]
		public RTCORBA.IProtocolProperties OrbProtocolProperties { get; set; }
		[IdlName("Protocol")]
		public RTCORBA.IProtocolProperties TransportProtocolProperties { get; set; }

		public Protocol()
		{
		}

		public Protocol(Protocol other)
		{
			ProtocolType = other.ProtocolType;
			OrbProtocolProperties = other.OrbProtocolProperties;
			TransportProtocolProperties = other.TransportProtocolProperties;
		}

		public Protocol(uint protocolType, RTCORBA.IProtocolProperties orbProtocolProperties, RTCORBA.IProtocolProperties transportProtocolProperties)
		{
			this.ProtocolType = protocolType;
			this.OrbProtocolProperties = orbProtocolProperties;
			this.TransportProtocolProperties = transportProtocolProperties;
		}

		public bool Equals(RTCORBA.Protocol? other)
		{
			if (other == null) return false;
			if (!ProtocolType.Equals(other.ProtocolType)) return false;
			if (!OrbProtocolProperties.Equals(other.OrbProtocolProperties)) return false;
			if (!TransportProtocolProperties.Equals(other.TransportProtocolProperties)) return false;
			return true;
		}
	}

}
