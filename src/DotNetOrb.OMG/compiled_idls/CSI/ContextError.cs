/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace CSI
{
	[RepositoryID("IDL:CSI/ContextError:1.0")]
	[Helper(typeof(ContextErrorHelper))]
	public partial class ContextError: CORBA.IIDLEntity, IEquatable<CSI.ContextError>
	{
		[IdlName("ContextError")]
		public ulong ClientContextId { get; set; }
		[IdlName("ContextError")]
		public int MajorStatus { get; set; }
		[IdlName("ContextError")]
		public int MinorStatus { get; set; }
		[IdlName("ContextError")]
		public byte[] ErrorToken { get; set; }

		public ContextError()
		{
		}

		public ContextError(ContextError other)
		{
			ClientContextId = other.ClientContextId;
			MajorStatus = other.MajorStatus;
			MinorStatus = other.MinorStatus;
			ErrorToken = other.ErrorToken;
		}

		public ContextError(ulong clientContextId, int majorStatus, int minorStatus, byte[] errorToken)
		{
			this.ClientContextId = clientContextId;
			this.MajorStatus = majorStatus;
			this.MinorStatus = minorStatus;
			this.ErrorToken = errorToken;
		}

		public bool Equals(CSI.ContextError? other)
		{
			if (other == null) return false;
			if (!ClientContextId.Equals(other.ClientContextId)) return false;
			if (!MajorStatus.Equals(other.MajorStatus)) return false;
			if (!MinorStatus.Equals(other.MinorStatus)) return false;
			if (!ErrorToken.SequenceEqual(other.ErrorToken)) return false;
			return true;
		}
	}

}
