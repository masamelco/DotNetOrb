/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace CSI
{
	[IdlName("SASContextBody")]
	[RepositoryID("IDL:CSI/SASContextBody:1.0")]
	[Helper(typeof(SASContextBodyHelper))]
	public partial class SASContextBody: CORBA.IIDLEntity, IEquatable<SASContextBody>
	{
		public SASContextBody()
		{
		}

		public SASContextBody(SASContextBody other)
		{
			_Discriminator = other._Discriminator;
			EstablishMsg = other.EstablishMsg;
			CompleteMsg = other.CompleteMsg;
			ErrorMsg = other.ErrorMsg;
			InContextMsg = other.InContextMsg;
		}

		public bool Equals(SASContextBody? other)
		{
			if (other == null) return false;
			if (_Discriminator != other._Discriminator) return false;
			switch (_Discriminator)
			{
				case 0:
					if (!EstablishMsg.Equals(other.EstablishMsg)) return false;
					break;
				case 1:
					if (!CompleteMsg.Equals(other.CompleteMsg)) return false;
					break;
				case 4:
					if (!ErrorMsg.Equals(other.ErrorMsg)) return false;
					break;
				case 5:
					if (!InContextMsg.Equals(other.InContextMsg)) return false;
					break;
			}
			return true;
		}

		public short _Discriminator { get; private set; }

		private CSI.EstablishContext _establishMsg;
		public CSI.EstablishContext EstablishMsg
		{
			get
			{
				if (_Discriminator != 0) throw new System.InvalidOperationException();
				return _establishMsg;
			}
			set
			{
				_Discriminator = 0;
				_establishMsg = value;
			}
		}
		private CSI.CompleteEstablishContext _completeMsg;
		public CSI.CompleteEstablishContext CompleteMsg
		{
			get
			{
				if (_Discriminator != 1) throw new System.InvalidOperationException();
				return _completeMsg;
			}
			set
			{
				_Discriminator = 1;
				_completeMsg = value;
			}
		}
		private CSI.ContextError _errorMsg;
		public CSI.ContextError ErrorMsg
		{
			get
			{
				if (_Discriminator != 4) throw new System.InvalidOperationException();
				return _errorMsg;
			}
			set
			{
				_Discriminator = 4;
				_errorMsg = value;
			}
		}
		private CSI.MessageInContext _inContextMsg;
		public CSI.MessageInContext InContextMsg
		{
			get
			{
				if (_Discriminator != 5) throw new System.InvalidOperationException();
				return _inContextMsg;
			}
			set
			{
				_Discriminator = 5;
				_inContextMsg = value;
			}
		}
	}

}
