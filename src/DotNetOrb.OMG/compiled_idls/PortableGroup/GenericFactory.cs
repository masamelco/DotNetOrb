/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:30
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace PortableGroup
{
	public abstract partial class GenericFactory : CORBA.Object, PortableGroup.IGenericFactory
	{
		public static class FactoryCreationIdHelper
		{
			private static volatile CORBA.TypeCode type;

			public static CORBA.TypeCode Type()
			{
				if (type == null)
				{
					lock (typeof(FactoryCreationIdHelper))
					{
						if (type == null)
						{
							type = CORBA.ORB.Init().CreateAliasTc(PortableGroup.GenericFactory.FactoryCreationIdHelper.Id(), "FactoryCreationId", CORBA.ORB.Init().GetPrimitiveTc((CORBA.TCKind) 11));
						}
					}
				}
				return type;
			}

			public static void Insert(CORBA.Any any, CORBA.Any value)
			{
				any.Type = Type();
				Write(any.CreateOutputStream(), value);
			}

			public static CORBA.Any Extract(CORBA.Any any)
			{
				var inputStream = any.CreateInputStream();
				try
				{
					return Read(inputStream);
				}
				finally
				{
					inputStream.Close();
				}
			}

			public static string Id()
			{
				return "IDL:omg.org/PortableGroup/GenericFactory/FactoryCreationId:1.0";
			}

			public static CORBA.Any Read(CORBA.IInputStream inputStream)
			{
				CORBA.Any result;
				result = inputStream.ReadAny();
				return result;
			}

			public static void Write(CORBA.IOutputStream outputStream, CORBA.Any value)
			{
				outputStream.WriteAny(value);
			}

		}
		[IdlName("create_object")]
		[ThrowsIdlException(typeof(PortableGroup.NoFactory))]
		[ThrowsIdlException(typeof(PortableGroup.ObjectNotCreated))]
		[ThrowsIdlException(typeof(PortableGroup.InvalidCriteria))]
		[ThrowsIdlException(typeof(PortableGroup.InvalidProperty))]
		[ThrowsIdlException(typeof(PortableGroup.CannotMeetCriteria))]
		public abstract CORBA.IObject CreateObject([WideChar(false)] string typeId, PortableGroup.Property[] theCriteria, out CORBA.Any factoryCreationId);
		[IdlName("delete_object")]
		[ThrowsIdlException(typeof(PortableGroup.ObjectNotFound))]
		public abstract void DeleteObject(CORBA.Any factoryCreationId);
	}
}

