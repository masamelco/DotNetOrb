/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:30
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;


namespace PortableGroup
{
	[IdlName("NoFactory")]
	[RepositoryID("IDL:omg.org/PortableGroup/NoFactory:1.0")]
	[Helper(typeof(NoFactoryHelper))]
	public partial class NoFactory: CORBA.UserException, CORBA.IIDLEntity, IEquatable<PortableGroup.NoFactory>
	{
		public NoFactory()
		{
		}

		public NoFactory(string _msg): base(_msg)
		{
		}

		public NoFactory(NoFactory other)
		{
			TheLocation = other.TheLocation;
			TypeId = other.TypeId;
		}

		public NoFactory(CosNaming.NameComponent[] theLocation, string typeId, string _msg = ""): base(_msg)
		{
			this.TheLocation = theLocation;
			this.TypeId = typeId;
		}

		public bool Equals(PortableGroup.NoFactory? other)
		{
			if (other == null) return false;
			if (!TheLocation.SequenceEqual(other.TheLocation)) return false;
			if (!TypeId.Equals(other.TypeId)) return false;
			return true;
		}
		[IdlName("the_location")]
		public CosNaming.NameComponent[] TheLocation { get; set; }
		[IdlName("type_id")]
		[WideChar(false)]
		public string TypeId { get; set; }
	}

}
