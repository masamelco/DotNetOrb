/**
 * Generated by DotNetORb.IdlCompiler V 1.0.0.0
 * Timestamp: 25/02/2024 9:49:29
 *
 */

using System;
using System.Collections.Generic;
using System.Linq;
using CORBA;

namespace CSIIOP
{
	[RepositoryID("IDL:CSIIOP/SECIOP_SEC_TRANS:1.0")]
	[Helper(typeof(SECIOP_SEC_TRANSHelper))]
	public partial class SECIOP_SEC_TRANS: CORBA.IIDLEntity, IEquatable<CSIIOP.SECIOP_SEC_TRANS>
	{
		[IdlName("SECIOP_SEC_TRANS")]
		public ushort TargetSupports { get; set; }
		[IdlName("SECIOP_SEC_TRANS")]
		public ushort TargetRequires { get; set; }
		[IdlName("SECIOP_SEC_TRANS")]
		public byte[] MechOid { get; set; }
		[IdlName("SECIOP_SEC_TRANS")]
		public byte[] TargetName { get; set; }
		[IdlName("SECIOP_SEC_TRANS")]
		public CSIIOP.TransportAddress[] Addresses { get; set; }

		public SECIOP_SEC_TRANS()
		{
		}

		public SECIOP_SEC_TRANS(SECIOP_SEC_TRANS other)
		{
			TargetSupports = other.TargetSupports;
			TargetRequires = other.TargetRequires;
			MechOid = other.MechOid;
			TargetName = other.TargetName;
			Addresses = other.Addresses;
		}

		public SECIOP_SEC_TRANS(ushort targetSupports, ushort targetRequires, byte[] mechOid, byte[] targetName, CSIIOP.TransportAddress[] addresses)
		{
			this.TargetSupports = targetSupports;
			this.TargetRequires = targetRequires;
			this.MechOid = mechOid;
			this.TargetName = targetName;
			this.Addresses = addresses;
		}

		public bool Equals(CSIIOP.SECIOP_SEC_TRANS? other)
		{
			if (other == null) return false;
			if (!TargetSupports.Equals(other.TargetSupports)) return false;
			if (!TargetRequires.Equals(other.TargetRequires)) return false;
			if (!MechOid.SequenceEqual(other.MechOid)) return false;
			if (!TargetName.SequenceEqual(other.TargetName)) return false;
			if (!Addresses.SequenceEqual(other.Addresses)) return false;
			return true;
		}
	}

}
